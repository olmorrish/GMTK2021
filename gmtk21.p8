pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
--variables

function _init()
	 player={
		sp=1,
		x=8,     y=16,
		h=8,      w=8, --in pixels
		flp=false,
		dx=0,     dy=0,
		max_dx=2, max_dy=3,
		acc=0.5,  boost=4,
		anim_speed=0.1,
		flp=false,
		next_anim_time=time(),
		jumping=false,
		falling=false,
		resp_x=8,
		resp_y=16
 }
 
 egg={
  sp=17,
  x=player.x, y=player.y-8,
  h=8, w=8,
  dx=0, dy=0,
  max_dx=2, max_dy=3,
  anim=0 --todo
 }
 
 --physics
 friction=0.85
 gravity=0.3
 
 --meta
 gameover=false
 carrying_egg=true
 level_num=0
 lives_left=6
 
 --camera
 
 
end
-->8
--update and draw

function _update()
	player_update()
	egg_update()
	camera_update()
end

function _draw()
 cls()
	map(0,0)
	player_draw()
	egg_draw()
	ui_draw()
end

function camera_update()
	--simple camera
 local cam_x=(level_num*128)%1280
 local cam_y=0
 camera(cam_x,cam_y)
end

function player_draw()
 
 if player.jumping then
 	player.sp=5
 
 elseif player.falling then
 	player.sp=6
 
 --idle no egg=head bob!
 elseif abs(player.dx)<0.1 
 and not carrying_egg then
	 if time()>player.next_anim_time then
	 	player.sp+=1
	 	if player.sp>4 then
	 	 player.sp=1
	 	end
	 	player.next_anim_time=time()+player.anim_speed
	 end 
	
	--moving (egg or no egg)
	elseif abs(player.dx)>0.1 then
	 if time()>player.next_anim_time then
	 	player.sp+=1
	 	if player.sp>3 then
	 	 player.sp=1
	 	end
	 	player.next_anim_time=time()+player.anim_speed
	 end 
	 
	--idle with egg
	else
	 player.sp=1
	end
 
 player.flp=player.dx<0
 
 spr(player.sp,player.x,
  player.y,1,1,player.flp)
 
end

function egg_draw()
	spr(egg.sp,egg.x,egg.y)
end

function ui_draw()
 spr(52,75,0)

 local str_lives="x"..lives_left
 print(str_lives,66,1,0)
 print(str_lives,67,2,7)

 local str_lvl="level "..level_num
 print(str_lvl,84,1,0)
 print(str_lvl,85,2,7)
end
-->8
--player functions

function player_update()
	--physics
	player.dy+=gravity
	player.dx*=friction
 
 --⬅️➡️ controls
 if btn(⬅️) then
	 player.dx-=player.acc
 elseif btn(➡️) then
  player.dx+=player.acc
 end
 
 --⬆️ jump
 if btnp(⬆️) and player.landed then
  player.landed=false
  if carrying_egg then
   player.dy-=player.boost*0.7
  else
   player.dy-=player.boost
  end
 end
 
 --🅾️ interact
 if btnp(🅾️) 
 and not collide_map(player,"up",1) then
 	if carrying_egg then
 		throw_egg()
	 elseif egg_nearby() then
	 	carrying_egg=true
		end
 end
 
 --map collision below
 if player.dy>0 then 
  player.falling=true
  player.landed=false
  player.jumping=false
  
  player.dy=limit_speed(player.dy,player.max_dy)
  
  if collide_map(player,"down",0) then  
   player.landed=true
   player.falling=false  
   player.dy=0
   player.y-=(player.y+player.h)%8
  elseif collide_map(player,"down",2) then
  	kill_player()
  end
 end
 
 --map collision above
 if player.dy<0 then 
 	player.falling=false
 	player.jumping=true
 	
 	player.dy=limit_speed(player.dy,player.max_dy)
  
  if collide_map(player,"up",1) then    
   player.dy=0
  end
 end
 
 --map collision/friction left/right
 if player.dx<0 then 
  
  if carrying_egg then
 	 player.dx=limit_speed(player.dx,player.max_dx*0.5)
 	else
 	 player.dx=limit_speed(player.dx,player.max_dx)
  end
  
  if collide_map(player,"left",0) then    
   player.x+=0
   player.dx=0
  end
 end
 
 if player.dx>0 then 

  if carrying_egg then
 	 player.dx=limit_speed(player.dx,player.max_dx*0.5)
 	else
 	 player.dx=limit_speed(player.dx,player.max_dx)
  end

  if collide_map(player,"right",0) then    
   player.x-=0
   player.dx=0
  end
 end
 
 check_for_lvl_done()
 
 --apply
 player.x+=player.dx
 player.y+=player.dy
end

function limit_speed(num,maximum)
 return mid(-maximum,num,maximum)
end

function egg_nearby()
	
	local xdif=abs(egg.x-player.x)
	local ydif=abs(egg.y-player.y)
	
	if xdif<8 and ydif<8 then
		return true
	else
		return false
	end
end

function kill_player()
	respawn(true)
end

function check_for_lvl_done()
	if(carrying_egg)then
		if collide_map(player,"right",6)
 	or collide_map(player,"left",6)
 	or collide_map(player,"up",6)
 	or collide_map(player,"down",6) then
			next_level()
	 end
	end
end
-->8
--egg functions

function egg_update()
 if carrying_egg then
	 
	 --map collision/friction left/right
	 if player.dx<0 then 
	 	egg.dx=limit_speed(egg.dx,egg.max_dx)
	  egg.dx+=friction
	  if collide_map(egg,"left",0) then    	   
	   egg.dx=0
	   player.dx=0 --blocks player
	   player.x+=0.5
	  end
	 end
	 
	 if player.dx>0 then 
	 	egg.dx=limit_speed(egg.dx,egg.max_dx)
	  egg.dx-=friction
	  if collide_map(egg,"right",0) then    	   
	   egg.dx=0
	   player.dx=0 --blocks player
	   player.x-=0.5
	  end
	 end
	 
	 egg.dx=0
	 egg.dy=0
	 egg.x=player.x
	 egg.y=player.y-8 
	 
	--else not carrying egg
	else 
	 --physics
	 egg.dy+=gravity	
	 egg.dx*=friction*1.1

		--map collision below
	 if egg.dy>0 then 
	  egg.dy=limit_speed(egg.dy,egg.max_dy)
	  if collide_map(egg,"down",0) then    
	   egg.dy=0
	   egg.y-=(egg.y+egg.h)%8
	  end
	 end
	 
	 --map collision above
	 if egg.dy<0 then 
	 	egg.dy=limit_speed(egg.dy,egg.max_dy)
	  if collide_map(egg,"up",1) then    
	   egg.dy=0
	  end
	 end
	 
	 --map collision/friction left/right
	 if egg.dx<0 then 
	 	egg.dx=limit_speed(egg.dx,egg.max_dx)
	  if collide_map(egg,"left",0) then    
	   egg.x+=0
	   egg.dx=0
	  end
	 end
	 
	 if egg.dx>0 then 
	 	egg.dx=limit_speed(egg.dx,egg.max_dx)
	  if collide_map(egg,"right",0) then    
	   egg.x-=0
	   egg.dx=0
	  end
	 end

	 --apply
	 egg.x+=egg.dx
	 egg.y+=egg.dy
	
	end
	
end

function throw_egg()

 if btn(⬆️) then
  egg.dy=-999
 elseif btn(⬇️) then
  --nothing
 else
 	if player.flp then
 	 egg.dx=-9999
 	else
 	 egg.dx=9999
 	end
 	egg.dy=-10
 end
 
	carrying_egg=false
end

function kill_egg()
 respawn(true)	
end
-->8
--collisions

function collide_map(obj,dir,flag)
	--obj=table needs x,y,w,h
	--dir=up,down,left,right
 
 --unpack
 local x=obj.x local y=obj.y
 local w=obj.w local h=obj.h
 
 --make hitbox on side of dir
 local x1 local x2
 local y1 local y2
 if dir=="left" then
  x1=x-1   y1=y
  x2=x     y2=y+h-1
 elseif dir=="right" then
  x1=x+w-1 y1=y
  x2=x+w   y2=y+h-1
 elseif dir=="up" then
  x1=x     y1=y-3
  x2=x+w-1 y2=y-2
 elseif dir=="down" then
  x1=x     y1=y+h-1
  x2=x+w-1 y2= y+h
 end
 
 rectfill(x1,y1,x2,y2,7)

 --pixels to tiles
 x1/=8 y1/=8
 x2/=8 y2/=8
 
 --check all 4 sides, get tile and check flag comp
 if fget(mget(x1,y1),flag)
 or fget(mget(x1,y2),flag)
 or fget(mget(x2,y1),flag)
 or fget(mget(x2,y2),flag) then
  return true
 else
   return false
 end
end

--todo: remove??
function collide_object(obj,others)
  
 for o in all(others) do
 	--get bounding box of other obj
 	local oth_x=o.x   local oth_y=o.y
 	--local o_x2=o.x+w local o_y2=o.y+y
 	local oth_w=o.w    local oth_h=o.h
 	
 	--get obj values
  local x1=obj.x local y1=obj.y
  local x2=obj.x+obj.w
  local y2=obj.y+obj.h
 	local w=abs(x1-x2)
 	local h=abs(y1-y2)
 	
 	--calc collision vals
 	local xs=w/2+oth_w/2
 	local ys=h/2+oth_h/2
 	local xd=abs((x1+w/2)-(oth_x+oth_w/2))
 	local yd=abs((y1+h/2)-(oth_y+oth_h/2))
 	
 	--check collision
 	if xd<xs and yd<ys then
 	 return true
 	else
 	 return false
 	end
 	
 end
end
-->8
--game logic

function next_level()
	level_num+=1
	
	--move player respawn
 player.resp_x=level_num*128+8
 player.resp_y=16
 
 respawn(false)
end

function respawn(was_death)
	
	if was_death then
		lives_left-=1
		if lives_left<1 then
		 game_over()
		end
	end 
	
	--reset the level
	player.x=player.resp_x
	player.y=player.resp_y
	--player.x=8
	--player.y=16
	carrying_egg=true
end

function game_over()
	gameover=true
end
__gfx__
00000000000087000008700000080000000000000000070000087000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000075990007599000077000000087000008759900075990000000000000000000000000000000000000000000000000000000000000000000000000
00700700000077800007780000075990000075990000778000077800000000000000000000000000000000000000000000000000000000000000000000000000
00077000700777707007777070077800700777800007777070077770000000000000000000000000000000000000000000000000000000000000000000000000
00077000077776700777767007777670077776700777767007777670000000000000000000000000000000000000000000000000000000000000000000000000
00700700076667000766670007666770076667007766670007666700000000000000000000000000000000000000000000000000000000000000000000000000
00000000007770000077700000777700007770000077700000777000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000900000009000000090000000900000090000000090000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000f7000000f7000000f7000000f7000000f700000a00000000000000000000000000000000777600000000000000000000000000000000000000000
0000000000ff770000ff770000ff770000ff7700009f77000a00f0a0a0a0000a0000000000000000007aa7700000000000000000000000000000000000000000
0000000000fff700005ff700005ff700005ff700005ff7000059f700005af00000a0f0000000f00007aaa9760000000000000000000000000000000000000000
0000000004ff7f7004ff7f7004f5757004f5757004f5757004f5a57000f9af0000faff0a00faff0007aaa9760000000000000000000000000000000000000000
000000000ffff7700ffff7700ffff7700f5f57700f5f57700f5f57f00f5af7f0a059a7f0005aa7f0077997760000000000000000000000000000000000000000
0000000004ffff7004ffff7004ffff7004ffff7004fff57004fff57744ff5f770ffaaf700ff9af70077777600000000000000000000000000000000000000000
00000000004fff00004fff00004fff00004fff00004fff00004fff77004ff5774f4fa5774f4fa577006666000000000000000000000000000000000000000000
00000000044444400444444000000000000f70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000004000040040f70400000000000ff77000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000004000000440ff77040000808000fff7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000004000000440fff7040000080004ff7f700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555555555555555558085555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000454545454545454545454545454545450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000045454500454545004545450045454500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000004545000045450000454500004545000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000005555555555555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055555555555555555555550000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000055555555555555555555555500f770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000055555555555555555555555500ff70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000005555555555555555555555550fff77000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000055555555555555555555555504fff7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055555555555555555555550004ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000005555555555555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000cc6ccccccc6ccc6cc66ccccc6ccccc0111111110bb3bbbbbbb3bbb3bb33bbbbb3bbbbb0444444440bb3bbbbbbb3bbb3bb33bbbbb3bbbbb044444444
00000000cc676c6666676c6766776c66676c66cc1d111111bb353b3333353b3533553b33353b33bb46444444bb353b3333353b3533553b33353b33bb46444444
00000000c677767777777671771776777776776c11111d11b355535555555354554553555553553b44444644b355535555555354554553555553553b44444644
00000000667117111111171111111771111771761111111133544544444445444444455444455453444444443354454444444544444445544445545344444444
0000000067111711d11117111d1117111d1111761111111135444544644445444644454446444453444444443544454464444544464445444644445344444444
00000000671111d11111d111111111d111111d761111111135444464444464444444446444444653444444443544446444446444444444644444465344444444
00000000671d111111111111111d111111111176111d111135464444444444444446444444444453444644443546444444444444444644444444445344464444
00000000671111111111111111111111111111761111111135444444444444444444444444444453444444443544444444444444444444444444445344444444
00000000671111111111111111111111111111761111111135444444444444444444444444444453444444443544444444444444444444444444445344444444
0000000067111111111d1111111d111111111176111d111135444444444644444446444444444453444644443544444444464444444644444444445344464444
0000000067111d111111111111111111111d11761111111135444644444444444444444444464453444444443544464444444444444444444446445344444444
00000000671111111111111111111111111111761111111135444444444444444444444444444453444444443544444444444444444444444444445344444444
0000000067111111111111d1111111d111111176111111d135444444444444644444446444444453444444643544444444444464444444644444445344444464
00000000671111111d1111111d111111111111761d11111135444444464444444644444444444453464444443544444446444444464444444444445346444444
00000000671d111111111117711111111d1111761111111135464444444444455444444446444453444444443546444444444445544444444644445344444444
00000000671111111111117667111111111111761111111135444444444444533544444444444453444444443544444444444453354444444444445344444444
0000000000000000111111766711111100000000c6cccccc00000000444444533544444400000000b3bbbbbb00000000444444533544444400000000b3bbbbbb
0000000000000000111d1117711d111100000000676c66cc00000000444644455446444400000000353b33bb00000000444644455446444400000000353b33bb
00000000000000001111111111111111000000007776776600000000444444444444444400000000555355330000000044444444444444440000000055535533
00000000000000001111111111111111000000001117717700000000444444444444444400000000444554550000000044444444444444440000000044455455
0000000000000000111111d1111111d1000000001d17111100000000444444644444446400000000464544440000000044444464444444640000000046454444
00000000000000001d1111111d1111110000000011111d1100000000464444444644444400000000444446440000000046444444464444440000000044444644
00000000000000001111111111111111000000001111111100000000444444444444444400000000444444440000000044444444444444440000000044444444
00000000000000001111111111111111000000001111111100000000444444444444444400000000444444440000000044444444444444440000000044444444
000000006711111111111d110000000011111176cccccccc35444444444446440000000044444453bbbbbbbb35444444444446440000000044444453bbbbbbbb
0000000067111111111111110000000011111176cc6666cc35444444444444440000000044444453bb3333bb35444444444444440000000044444453bb3333bb
0000000067111d111d11111100000000111d11766677776635444644464444440000000044464453335555333544464446444444000000004446445333555533
00000000671111111111111100000000111111767711176735444444444444440000000044444453554445353544444444444444000000004444445355444535
0000000067d1111111111d11000000001d111d761111117135644444444446440000000046444653444444543564444444444644000000004644465344444454
00000000667d111111111111000000001111d7661111d17133564444444444440000000044446533444464543356444444444444000000004444653344446454
00000000066777777777777700000000777776601111111103355555555555550000000055555330444444440335555555555555000000005555533044444444
00000000006666666666666600000000666666001111111100333333333333330000000033333300444444440033333333333333000000003333330044444444
00007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00006000022222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00076700022222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00066600022222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00066500022222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00765650022222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666560022222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06665656000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
54544545000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50044005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
54455444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
40500505000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
54000044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
40000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030303030303030303030303030303000303030303030303030303030303030000030300030003030003000303000300030300030303030003030303000303
0440000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4100000000000000313232323232330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0041440000000000000000000000009090909000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4263540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000624400000041420000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000005480808051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000006242434363000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000081000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0042424200909090909000000042000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000004200000000009000420042420000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0042000000000000004200420042420000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0042004200000000004200420042420000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424243434343434343430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000005300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000000001105000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
